/*
VirtyAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StorageMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageMetadata{}

// StorageMetadata struct for StorageMetadata
type StorageMetadata struct {
	Rool *string `json:"rool,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	DeviceType *string `json:"deviceType,omitempty"`
}

// NewStorageMetadata instantiates a new StorageMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageMetadata() *StorageMetadata {
	this := StorageMetadata{}
	return &this
}

// NewStorageMetadataWithDefaults instantiates a new StorageMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageMetadataWithDefaults() *StorageMetadata {
	this := StorageMetadata{}
	return &this
}

// GetRool returns the Rool field value if set, zero value otherwise.
func (o *StorageMetadata) GetRool() string {
	if o == nil || IsNil(o.Rool) {
		var ret string
		return ret
	}
	return *o.Rool
}

// GetRoolOk returns a tuple with the Rool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageMetadata) GetRoolOk() (*string, bool) {
	if o == nil || IsNil(o.Rool) {
		return nil, false
	}
	return o.Rool, true
}

// HasRool returns a boolean if a field has been set.
func (o *StorageMetadata) HasRool() bool {
	if o != nil && !IsNil(o.Rool) {
		return true
	}

	return false
}

// SetRool gets a reference to the given string and assigns it to the Rool field.
func (o *StorageMetadata) SetRool(v string) {
	o.Rool = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *StorageMetadata) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageMetadata) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *StorageMetadata) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *StorageMetadata) SetProtocol(v string) {
	o.Protocol = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *StorageMetadata) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageMetadata) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *StorageMetadata) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *StorageMetadata) SetDeviceType(v string) {
	o.DeviceType = &v
}

func (o StorageMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rool) {
		toSerialize["rool"] = o.Rool
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.DeviceType) {
		toSerialize["deviceType"] = o.DeviceType
	}
	return toSerialize, nil
}

type NullableStorageMetadata struct {
	value *StorageMetadata
	isSet bool
}

func (v NullableStorageMetadata) Get() *StorageMetadata {
	return v.value
}

func (v *NullableStorageMetadata) Set(val *StorageMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageMetadata(val *StorageMetadata) *NullableStorageMetadata {
	return &NullableStorageMetadata{value: val, isSet: true}
}

func (v NullableStorageMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


