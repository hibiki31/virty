/*
VirtyAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PowerStatusForUpdateDomain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerStatusForUpdateDomain{}

// PowerStatusForUpdateDomain struct for PowerStatusForUpdateDomain
type PowerStatusForUpdateDomain struct {
	Status *string `json:"status,omitempty"`
}

// NewPowerStatusForUpdateDomain instantiates a new PowerStatusForUpdateDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerStatusForUpdateDomain() *PowerStatusForUpdateDomain {
	this := PowerStatusForUpdateDomain{}
	return &this
}

// NewPowerStatusForUpdateDomainWithDefaults instantiates a new PowerStatusForUpdateDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerStatusForUpdateDomainWithDefaults() *PowerStatusForUpdateDomain {
	this := PowerStatusForUpdateDomain{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PowerStatusForUpdateDomain) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerStatusForUpdateDomain) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PowerStatusForUpdateDomain) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PowerStatusForUpdateDomain) SetStatus(v string) {
	o.Status = &v
}

func (o PowerStatusForUpdateDomain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerStatusForUpdateDomain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullablePowerStatusForUpdateDomain struct {
	value *PowerStatusForUpdateDomain
	isSet bool
}

func (v NullablePowerStatusForUpdateDomain) Get() *PowerStatusForUpdateDomain {
	return v.value
}

func (v *NullablePowerStatusForUpdateDomain) Set(val *PowerStatusForUpdateDomain) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerStatusForUpdateDomain) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerStatusForUpdateDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerStatusForUpdateDomain(val *PowerStatusForUpdateDomain) *NullablePowerStatusForUpdateDomain {
	return &NullablePowerStatusForUpdateDomain{value: val, isSet: true}
}

func (v NullablePowerStatusForUpdateDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerStatusForUpdateDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


