/*
VirtyAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the TokenRFC6749Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenRFC6749Response{}

// TokenRFC6749Response struct for TokenRFC6749Response
type TokenRFC6749Response struct {
	AccessToken string `json:"access_token"`
	TokenType string `json:"token_type"`
}

type _TokenRFC6749Response TokenRFC6749Response

// NewTokenRFC6749Response instantiates a new TokenRFC6749Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRFC6749Response(accessToken string, tokenType string) *TokenRFC6749Response {
	this := TokenRFC6749Response{}
	this.AccessToken = accessToken
	this.TokenType = tokenType
	return &this
}

// NewTokenRFC6749ResponseWithDefaults instantiates a new TokenRFC6749Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRFC6749ResponseWithDefaults() *TokenRFC6749Response {
	this := TokenRFC6749Response{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *TokenRFC6749Response) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *TokenRFC6749Response) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *TokenRFC6749Response) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetTokenType returns the TokenType field value
func (o *TokenRFC6749Response) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *TokenRFC6749Response) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *TokenRFC6749Response) SetTokenType(v string) {
	o.TokenType = v
}

func (o TokenRFC6749Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenRFC6749Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["token_type"] = o.TokenType
	return toSerialize, nil
}

func (o *TokenRFC6749Response) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_token",
		"token_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenRFC6749Response := _TokenRFC6749Response{}

	err = json.Unmarshal(bytes, &varTokenRFC6749Response)

	if err != nil {
		return err
	}

	*o = TokenRFC6749Response(varTokenRFC6749Response)

	return err
}

type NullableTokenRFC6749Response struct {
	value *TokenRFC6749Response
	isSet bool
}

func (v NullableTokenRFC6749Response) Get() *TokenRFC6749Response {
	return v.value
}

func (v *NullableTokenRFC6749Response) Set(val *TokenRFC6749Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRFC6749Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRFC6749Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRFC6749Response(val *TokenRFC6749Response) *NullableTokenRFC6749Response {
	return &NullableTokenRFC6749Response{value: val, isSet: true}
}

func (v NullableTokenRFC6749Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRFC6749Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


