# coding: utf-8

"""
    VirtyAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from virty_client.models.domain_for_create import DomainForCreate

class TestDomainForCreate(unittest.TestCase):
    """DomainForCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DomainForCreate:
        """Test DomainForCreate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainForCreate`
        """
        model = DomainForCreate()
        if include_optional:
            return DomainForCreate(
                type = 'manual',
                name = '',
                node_name = '',
                memory_mega_byte = 56,
                cpu = 56,
                disks = [
                    virty_client.models.domain_for_create_disk.DomainForCreateDisk(
                        type = '', 
                        save_pool_uuid = '', 
                        original_pool_uuid = '', 
                        original_name = '', 
                        size_giga_byte = 56, 
                        template_name = '', )
                    ],
                interface = [
                    virty_client.models.domain_for_create_interface.DomainForCreateInterface(
                        type = '', 
                        mac = '', 
                        network_uuid = '', 
                        port = '', )
                    ],
                cloud_init = virty_client.models.cloud_init_insert.CloudInitInsert(
                    hostname = '', 
                    user_data = '', )
            )
        else:
            return DomainForCreate(
                type = 'manual',
                name = '',
                node_name = '',
                memory_mega_byte = 56,
                cpu = 56,
                disks = [
                    virty_client.models.domain_for_create_disk.DomainForCreateDisk(
                        type = '', 
                        save_pool_uuid = '', 
                        original_pool_uuid = '', 
                        original_name = '', 
                        size_giga_byte = 56, 
                        template_name = '', )
                    ],
                interface = [
                    virty_client.models.domain_for_create_interface.DomainForCreateInterface(
                        type = '', 
                        mac = '', 
                        network_uuid = '', 
                        port = '', )
                    ],
        )
        """

    def testDomainForCreate(self):
        """Test DomainForCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
