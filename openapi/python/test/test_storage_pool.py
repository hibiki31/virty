# coding: utf-8

"""
    VirtyAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from virty_client.models.storage_pool import StoragePool

class TestStoragePool(unittest.TestCase):
    """StoragePool unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StoragePool:
        """Test StoragePool
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StoragePool`
        """
        model = StoragePool()
        if include_optional:
            return StoragePool(
                id = 56,
                name = '',
                storages = [
                    virty_client.models.storage_container_for_storage_pool.StorageContainerForStoragePool(
                        storage = virty_client.models.storage_for_storage_container.StorageForStorageContainer(
                            name = '', 
                            uuid = '', 
                            node_name = '', ), )
                    ]
            )
        else:
            return StoragePool(
                id = 56,
                name = '',
                storages = [
                    virty_client.models.storage_container_for_storage_pool.StorageContainerForStoragePool(
                        storage = virty_client.models.storage_for_storage_container.StorageForStorageContainer(
                            name = '', 
                            uuid = '', 
                            node_name = '', ), )
                    ],
        )
        """

    def testStoragePool(self):
        """Test StoragePool"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
