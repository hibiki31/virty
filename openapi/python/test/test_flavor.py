# coding: utf-8

"""
    VirtyAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from virty_client.models.flavor import Flavor

class TestFlavor(unittest.TestCase):
    """Flavor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Flavor:
        """Test Flavor
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Flavor`
        """
        model = Flavor()
        if include_optional:
            return Flavor(
                count = 56,
                data = [
                    virty_client.models.flavor_page.FlavorPage(
                        name = '', 
                        os = '', 
                        manual_url = '', 
                        icon = '', 
                        cloud_init_ready = True, 
                        description = '', 
                        id = 56, )
                    ]
            )
        else:
            return Flavor(
                count = 56,
                data = [
                    virty_client.models.flavor_page.FlavorPage(
                        name = '', 
                        os = '', 
                        manual_url = '', 
                        icon = '', 
                        cloud_init_ready = True, 
                        description = '', 
                        id = 56, )
                    ],
        )
        """

    def testFlavor(self):
        """Test Flavor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
