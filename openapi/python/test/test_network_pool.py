# coding: utf-8

"""
    VirtyAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from virty_client.models.network_pool import NetworkPool

class TestNetworkPool(unittest.TestCase):
    """NetworkPool unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkPool:
        """Test NetworkPool
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkPool`
        """
        model = NetworkPool()
        if include_optional:
            return NetworkPool(
                id = 56,
                name = '',
                networks = [
                    virty_client.models.network_for_network_pool.NetworkForNetworkPool(
                        name = '', 
                        uuid = '', 
                        node_name = '', 
                        bridge = '', 
                        type = '', )
                    ],
                ports = [
                    virty_client.models.network_pool_port.NetworkPoolPort(
                        name = '', 
                        vlan_id = 56, 
                        network = virty_client.models.network_for_network_pool.NetworkForNetworkPool(
                            name = '', 
                            uuid = '', 
                            node_name = '', 
                            bridge = '', 
                            type = '', ), )
                    ]
            )
        else:
            return NetworkPool(
        )
        """

    def testNetworkPool(self):
        """Test NetworkPool"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
