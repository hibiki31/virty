# coding: utf-8

"""
    VirtyAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from virty_client.models.storage import Storage

class TestStorage(unittest.TestCase):
    """Storage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Storage:
        """Test Storage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Storage`
        """
        model = Storage()
        if include_optional:
            return Storage(
                count = 56,
                data = [
                    virty_client.models.storage_page.StoragePage(
                        name = '', 
                        uuid = '', 
                        status = 56, 
                        active = True, 
                        available = 56, 
                        capacity = 56, 
                        node_name = '', 
                        node = virty_client.models.node_page.NodePage(
                            name = '', 
                            description = '', 
                            domain = '', 
                            user_name = '', 
                            port = 56, 
                            core = 56, 
                            memory = 56, 
                            cpu_gen = '', 
                            os_like = '', 
                            os_name = '', 
                            os_version = '', 
                            status = 56, 
                            qemu_version = '', 
                            libvirt_version = '', 
                            roles = [
                                virty_client.models.node_role.NodeRole(
                                    role_name = '', 
                                    extra_json = virty_client.models.extrajson.Extrajson(), )
                                ], ), 
                        auto_start = True, 
                        path = '', 
                        meta_data = virty_client.models.storage_metadata.StorageMetadata(
                            rool = '', 
                            protocol = '', 
                            device_type = '', ), 
                        update_token = '', 
                        allocation_commit = 56, 
                        capacity_commit = 56, )
                    ]
            )
        else:
            return Storage(
                count = 56,
                data = [
                    virty_client.models.storage_page.StoragePage(
                        name = '', 
                        uuid = '', 
                        status = 56, 
                        active = True, 
                        available = 56, 
                        capacity = 56, 
                        node_name = '', 
                        node = virty_client.models.node_page.NodePage(
                            name = '', 
                            description = '', 
                            domain = '', 
                            user_name = '', 
                            port = 56, 
                            core = 56, 
                            memory = 56, 
                            cpu_gen = '', 
                            os_like = '', 
                            os_name = '', 
                            os_version = '', 
                            status = 56, 
                            qemu_version = '', 
                            libvirt_version = '', 
                            roles = [
                                virty_client.models.node_role.NodeRole(
                                    role_name = '', 
                                    extra_json = virty_client.models.extrajson.Extrajson(), )
                                ], ), 
                        auto_start = True, 
                        path = '', 
                        meta_data = virty_client.models.storage_metadata.StorageMetadata(
                            rool = '', 
                            protocol = '', 
                            device_type = '', ), 
                        update_token = '', 
                        allocation_commit = 56, 
                        capacity_commit = 56, )
                    ],
        )
        """

    def testStorage(self):
        """Test Storage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
